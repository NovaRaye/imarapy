name: Build & Publish wheels

on:
  push:
    tags:
      - 'v*'                  # 任何 v0.1.0、v1.2.3… 都触发

# 若用 PyPI Trusted Publishing，还需要 id-token: write
permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # ---------- Linux ----------
          - os: ubuntu-latest      # x86_64
            label: linux-x86_64
            target: x86_64
            manylinux: "2_28"
          - os: ubuntu-latest      # cross-compile aarch64
            label: linux-aarch64
            target: aarch64
            manylinux: "2_28"

          # ---------- macOS ----------
          - os: macos-13           # Intel
            label: macos-intel
            target: x86_64
            manylinux: "off"
          - os: macos-14           # Apple Silicon
            label: macos-arm64
            target: aarch64
            manylinux: "off"

          # ---------- Windows -------
          - os: windows-latest
            label: win-x86_64
            target: x86_64
            manylinux: "off"

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux }}  # ← 这里解决 glibc 版本过新问题
          args: --release --interpreter 3.10 3.11 3.12

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.label }}-wheels
          path: target/wheels/*.whl

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: "*-wheels"

      - uses: astral-sh/setup-uv@v4

      - name: Upload to PyPI
        run: uv publish dist/* --token ${{ secrets.PYPI_API_TOKEN }}
        # 如果改用 Trusted Publishing，可写：
        # run: uv publish dist/*
