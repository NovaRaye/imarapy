name: Build & Publish wheels

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            label: linux-x86_64
            target: x86_64
            manylinux: "2_28"
          - os: ubuntu-latest
            label: linux-aarch64
            target: aarch64
            manylinux: "2_28"

          - os: macos-13
            label: macos-intel
            target: x86_64
            manylinux: "off"
          - os: macos-14
            label: macos-arm64
            target: aarch64
            manylinux: "off"

          - os: windows-latest
            label: win-x86_64
            target: x86_64
            manylinux: "off"

    steps:
      - uses: actions/checkout@v4

      - name: Bump Cargo version to tag (Unix)
        if: runner.os != 'Windows'
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          cargo install --locked cargo-edit
          cargo set-version --workspace "$VERSION"

      - name: Bump Cargo version to tag (Windows)
        if: runner.os == 'Windows'
        run: |
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/v', ''
          cargo install --locked cargo-edit
          cargo set-version --workspace "$VERSION"

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux }}
          args: --release --interpreter 3.10 3.11 3.12

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.label }}-wheels
          path: target/wheels/*.whl
          retention-days: 7

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all wheel artifacts to one dir
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: "*-wheels"
          merge-multiple: true

      - uses: astral-sh/setup-uv@v4

      - name: Upload to PyPI
        run: uv publish dist/* --token ${{ secrets.PYPI_API_TOKEN }}
